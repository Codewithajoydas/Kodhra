<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Draft | Code Snippet Manager</title>
    <link rel="stylesheet" href="/style/css/partials/Header.css">
    <link rel="stylesheet" href="/style/css/ad_search.css">
    <link rel="stylesheet" href="/style/css/Notification.css">
    <link rel="stylesheet" href="/style/css/index.css">
    <link rel="stylesheet" href="/style/css/chip.css">
    <link rel="stylesheet" href="/style/css/card.css">
    <link rel="stylesheet" href="/style/css/folder.css">
    <link rel="stylesheet" href="/style/css/toast.css">

    <script src="/socket.io/socket.io.js"></script>

    <link rel="shortcut icon" href="/assets/logo.png" type="image/png" />
    <script src="https://unpkg.com/colorthief/dist/color-thief.umd.js"></script>
    <script src="https://unpkg.com/@lottiefiles/dotlottie-wc@0.6.2/dist/dotlottie-wc.js" type="module"></script>
    <link rel="preload" href="/gEzG0w1WVY.lottie" as="fetch" crossorigin="anonymous" />
    <style>
        .loader {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            width: 100%;
            position: fixed;
            background: white;
            z-index: 100000;
            top: 0;
            font-size: clamp(30px, 3vw, 40px);

            font-weight: bolder;
        }

        .spain {
            width: 0.5em;
            height: 0.5em;
            background: #000000;
            border-radius: 50%;
            margin: 5px;
            animation: spin 0.6s ease-in-out infinite;
        }

        .spain:nth-child(1) {
            animation-delay: 0.1s;
        }

        .spain:nth-child(2) {
            animation-delay: 0.2s;
        }

        .spain:nth-child(3) {
            animation-delay: 0.3s;
        }

        @keyframes spin {
            0% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-10px);
            }

            100% {
                transform: translateY(0);
            }
        }
    </style>
    <script src="https://unpkg.com/@barba/core"></script>
    <script src="https://cdn.jsdelivr.net/npm/@barba/core"></script>
    <script src="https://unpkg.com/gsap@3/dist/gsap.min.js"></script>

</head>

<body data-theme="light">
    <div class="loader">
        <dotlottie-wc src="gEzG0w1WVY.lottie" style="width: 400px; height: 400px" speed="1" autoplay
            loop></dotlottie-wc>

    </div>
    <div class="content">
        <%- include("partials/header.ejs")%>
            <div class="container">
                <%- include("partials/sidebar.ejs", { navigation: 'draft' })%>
                    <main style="width: 100%; height: calc(100vh - 70px);">
                        <div class="cardContainer-header">
                            <span class="page_title">All Draft Snippets</span>
                        </div>

                        <div id="cards1">
                        </div>
                        <div id="sentinal" style="text-align: center; margin-block:10px; color: red;">
                            <img src="https://cdn.pixabay.com/animation/2024/04/02/07/57/07-57-40-974_512.gif"
                                alt="Loading..." style="width: 10%;">
                        </div>

                        <!-- <%- include("partials/fab")%> -->
                    </main>
                    <div class="notification-bar">
                        <h3>Notifications</h3>
                        <ul class="notification-lists">
                        </ul>
                    </div>
                    <div id="context_menu"
                        style="position: absolute;top: 0;left: 0;display: none;z-index: 1000000;width: 200px;">
                        <ul id="context_menu_list"></ul>
                    </div>

                    <div class="toast" data-type="success">
                        <div class="toast-content">
                            <span class="toast-message"> </span>
                            <div class="close">
                                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="lucide lucide-octagon-x-icon lucide-octagon-x">
                                    <path d="m15 9-6 6" />
                                    <path
                                        d="M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z" />
                                    <path d="m9 9 6 6" />
                                </svg>
                            </div>
                        </div>
                    </div>

                    <div class="notification-bar">
                        <h3>Notifications</h3>
                        <ul class="notification-lists">
                        </ul>
                    </div>

                    <div class="advanced-search">
                        <h3>Advanced Search</h3>
                        <div class="feildList">
                            <label for="title">
                                <span>Title:</span>
                                <input type="text" name="title" id="title" placeholder="Title" />
                            </label>
                            <label for="code"><span>Code:</span> <input type="text" name="code" id="code"
                                    placeholder="Code"></label>
                            <label for="description">
                                <span>Description:</span>
                                <textarea type="text" name="description" id="description" placeholder="Description"
                                    rows="5"></textarea>
                            </label>
                            <label for="language">
                                <span>Language:</span>
                                <input type="text" name="language" id="language" placeholder="Language"
                                    list="languages" />
                                <datalist id="languages">
                                    <option value="JavaScript">JavaScript</option>
                                    <option value="CSS">CSS</option>
                                    <option value="HTML">HTML</option>
                                    <option value="C">C</option>
                                    <option value="C++">C++</option>
                                    <option value="C#">C#</option>
                                    <option value="Java">Java</option>
                                    <option value="TypeScript">TypeScript</option>
                                    <option value="Python">Python</option>
                                    <option value="Ruby">Ruby</option>
                                    <option value="PHP">PHP</option>
                                    <option value="Go">Go</option>
                                    <option value="Rust">Rust</option>
                                    <option value="Swift">Swift</option>
                                    <option value="Kotlin">Kotlin</option>
                                    <option value="Objective-C">Objective-C</option>
                                    <option value="Scala">Scala</option>
                                    <option value="Perl">Perl</option>
                                    <option value="R">R</option>
                                    <option value="Dart">Dart</option>
                                    <option value="Haskell">Haskell</option>
                                    <option value="Lua">Lua</option>
                                    <option value="Elixir">Elixir</option>
                                    <option value="Clojure">Clojure</option>
                                    <option value="Shell">Shell (Bash)</option>
                                    <option value="PowerShell">PowerShell</option>
                                    <option value="SQL">SQL</option>
                                    <option value="GraphQL">GraphQL</option>
                                    <option value="MATLAB">MATLAB</option>
                                    <option value="Assembly">Assembly</option>
                                    <option value="Fortran">Fortran</option>
                                    <option value="COBOL">COBOL</option>
                                    <option value="Erlang">Erlang</option>
                                    <option value="VB.NET">VB.NET</option>
                                </datalist>
                            </label>
                            <label for="folder">
                                <span>Folder:</span>
                                <input type="text" name="folder" id="folder" placeholder="Folder" />
                            </label>
                            <label for="date">
                                <span>Date:</span>
                                <input type="date" name="date" id="date" placeholder="Date" />
                            </label>
                        </div>
                        <button id="searchBtn" onclick="advance_search()">Search</button>

                    </div>

                    <div class="networkInfo" style="display: none;">
                        <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" class="lucide lucide-info-icon lucide-info">
                                <circle cx="12" cy="12" r="10" />
                                <path d="M12 16v-4" />
                                <path d="M12 8h.01" />
                            </svg></span>

                        <span id="networkInfo"></span>
                    </div>
                    <div class="toast" data-type="success">
                        <div class="toast-content">
                            <span class="toast-message"> </span>
                            <div class="close">
                                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="lucide lucide-octagon-x-icon lucide-octagon-x">
                                    <path d="m15 9-6 6" />
                                    <path
                                        d="M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z" />
                                    <path d="m9 9 6 6" />
                                </svg>
                            </div>
                        </div>
                    </div>
            </div>
    </div>

    <script>
        window.onload = () => {
            let loader = document.querySelector(".loader");
            loader.style.display = "none";
        };
    </script>

    <script src="/scripts/ad_search.js"></script>
    <script src="/scripts/Fab.js"></script>
    <script src="/scripts/Notification.js"></script>
    <script src="/scripts/searchFunction.js"></script>
    <script src="\scripts\isonline.js"></script>
    <script src="/scripts/header.js"></script>

    <script>
        let cardsContainer = document.getElementById("cards1");
        let sentinalv2 = document.getElementById("sentinal");
        let currentPage = 1;
        const observerA = new IntersectionObserver(async (entries) => {
            for (let entry of entries) {
                if (entry.isIntersecting) {
                    currentPage++;
                    const res = await fetch(`/pin/json?page=${currentPage}`);
                    if (res.ok) {
                        const html = await res.text();
                        if (html.trim()) {
                            cardsContainer.insertAdjacentHTML("beforeend", html);
                        } else {
                            sentinalv2.textContent = "All caught up!... ";
                            observerA.unobserve(sentinalv2);
                        }
                    }
                }
            }
        }, {
            threshold: 0
        });
        observerA.observe(sentinalv2);
    </script>


    <script>
        const containera = document.querySelector("#cards1");
        containera.addEventListener("change", () => {
            updateSelectedCards();
        });

        const onDocumentChange = (mutationsList, observer) => {
            for (const mutation of mutationsList) {
                if (mutation.type === 'childList') {
                } else if (mutation.type === 'attributes') {
                }
            }
        };

        const config = {
            attributes: true,
            childList: true,
            subtree: true
        };

        const observers = new MutationObserver(onDocumentChange);

        if (containera) {
            observers.observe(containera, config);
        }
        let selectedCardsSet = new Set();






    </script>
    <script src="/scripts/saveDraft.js"></script>
    <script src="/scripts/context_menu.js"></script>

</body>

</html>