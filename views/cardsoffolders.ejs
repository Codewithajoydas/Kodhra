<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home | Code Snippet Manager</title>
    <link rel="stylesheet" href="/style/css/index.css" />
    <link rel="stylesheet" href="/style/css/partials/Header.css">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" href="/assets/logo.png" type="image/png" />
    <script src="https://unpkg.com/@barba/core"></script>
    <script src="https://unpkg.com/@lottiefiles/dotlottie-wc@0.6.2/dist/dotlottie-wc.js" type="module"></script>
    <link rel="preload" href="/gEzG0w1WVY.lottie" as="fetch" crossorigin="anonymous" />
    <link rel="manifest" href="manifest.json">
    <style>
        .loader {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            width: 100%;
            position: fixed;
            background: white;
            z-index: 100000;
            top: 0;
            font-size: clamp(30px, 3vw, 40px);

            font-weight: bolder;
        }

        .spain {
            width: 0.5em;
            height: 0.5em;
            background: #000000;
            border-radius: 50%;
            margin: 5px;
            animation: spin 0.6s ease-in-out infinite;
        }

        .spain:nth-child(1) {
            animation-delay: 0.1s;
        }

        .spain:nth-child(2) {
            animation-delay: 0.2s;
        }

        .spain:nth-child(3) {
            animation-delay: 0.3s;
        }

        @keyframes spin {
            0% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-10px);
            }

            100% {
                transform: translateY(0);
            }
        }
    </style>
</head>

<body data-theme="light">
    <div class="loader">
        <dotlottie-wc src="gEzG0w1WVY.lottie" style="width: 400px; height: 400px" speed="1" autoplay
            loop></dotlottie-wc>
    </div>
    <div class="content">
        <%- include("partials/header.ejs")%>
        <div class="container">
            <aside>
                <ul>
                    <!-- Main Pages -->
                    <span>Main Pages</span>
                    <li class="active">
                        <a href="/"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round"
                                class="lucide lucide-layout-dashboard-icon lucide-layout-dashboard">
                                <rect width="7" height="9" x="3" y="3" rx="1" />
                                <rect width="7" height="5" x="14" y="3" rx="1" />
                                <rect width="7" height="9" x="14" y="12" rx="1" />
                                <rect width="7" height="5" x="3" y="16" rx="1" />
                            </svg>
                            Dashboard</a>
                    </li>
                    <li>
                        <a href="/card"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-earth-icon lucide-earth">
                                <path d="M21.54 15H17a2 2 0 0 0-2 2v4.54" />
                                <path
                                    d="M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17" />
                                <path d="M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05" />
                                <circle cx="12" cy="12" r="10" />
                            </svg>
                            All Code Snippets</a>
                    </li>
                    <li>
                        <a href="/folder"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-folder-icon lucide-folder">
                                <path
                                    d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z" />
                            </svg>
                            Folders</a>
                    </li>
                    <li>
                        <a href="/tags"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-tags-icon lucide-tags">
                                <path
                                    d="M13.172 2a2 2 0 0 1 1.414.586l6.71 6.71a2.4 2.4 0 0 1 0 3.408l-4.592 4.592a2.4 2.4 0 0 1-3.408 0l-6.71-6.71A2 2 0 0 1 6 9.172V3a1 1 0 0 1 1-1z" />
                                <path d="M2 7v6.172a2 2 0 0 0 .586 1.414l6.71 6.71a2.4 2.4 0 0 0 3.191.193" />
                                <circle cx="10.5" cy="6.5" r=".5" fill="currentColor" />
                            </svg>
                            Tags</a>
                    </li>
                    <li>
                        <a href="/pin"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-pin-icon lucide-pin">
                                <path d="M12 17v5" />
                                <path
                                    d="M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z" />
                            </svg>
                            Pinned</a>
                    </li>
                    <li>
                        <a href="/fav"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-star-icon lucide-star">
                                <path
                                    d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z" />
                            </svg>
                            Favorites</a>
                    </li>

                    <!-- Creation Shortcuts -->
                    <span>Creation Shortcuts</span>
                    <li>
                        <a href="/card/create"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-square-dashed-bottom-code-icon lucide-square-dashed-bottom-code">
                                <path d="M10 9.5 8 12l2 2.5" />
                                <path d="M14 21h1" />
                                <path d="m14 9.5 2 2.5-2 2.5" />
                                <path d="M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2" />
                                <path d="M9 21h1" />
                            </svg>
                            New Snippet</a>
                    </li>
                    <li>
                        <a href="/create-folder"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-folder-pen-icon lucide-folder-pen">
                                <path
                                    d="M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5" />
                                <path
                                    d="M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z" />
                            </svg>
                            New Folder</a>
                    </li>

                    <!-- Search & Explore -->
                    <span>Search & Explore</span>
                    <li>
                        <a href="/search"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-search-icon lucide-search">
                                <path d="m21 21-4.34-4.34" />
                                <circle cx="11" cy="11" r="8" />
                            </svg>
                            Search</a>
                    </li>
                    <li>
                        <a href="/explore"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-telescope-icon lucide-telescope">
                                <path
                                    d="m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44" />
                                <path d="m13.56 11.747 4.332-.924" />
                                <path d="m16 21-3.105-6.21" />
                                <path
                                    d="M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z" />
                                <path d="m6.158 8.633 1.114 4.456" />
                                <path d="m8 21 3.105-6.21" />
                                <circle cx="12" cy="13" r="2" />
                            </svg>
                            Explore Public Snippets</a>
                    </li>

                    <!-- Settings & Tools -->
                    <span>Settings & Tools</span>
                    <li>
                        <a href="/import-export">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" class="lucide lucide-cloud-download-icon lucide-cloud-download">
                                <path d="M12 13v8l-4-4" />
                                <path d="m12 21 4-4" />
                                <path d="M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284" />
                            </svg>
                            Import / Export</a>
                    </li>
                    <li>
                        <a href="/settings"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-cog-icon lucide-cog">
                                <path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z" />
                                <path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" />
                                <path d="M12 2v2" />
                                <path d="M12 22v-2" />
                                <path d="m17 20.66-1-1.73" />
                                <path d="M11 10.27 7 3.34" />
                                <path d="m20.66 17-1.73-1" />
                                <path d="m3.34 7 1.73 1" />
                                <path d="M14 12h8" />
                                <path d="M2 12h2" />
                                <path d="m20.66 7-1.73 1" />
                                <path d="m3.34 17 1.73-1" />
                                <path d="m17 3.34-1 1.73" />
                                <path d="m11 13.73-4 6.93" />
                            </svg>
                            Settings</a>
                    </li>
                    <li>
                        <a href="/account"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-user-lock-icon lucide-user-lock">
                                <circle cx="10" cy="7" r="4" />
                                <path d="M10.3 15H7a4 4 0 0 0-4 4v2" />
                                <path d="M15 15.5V14a2 2 0 0 1 4 0v1.5" />
                                <rect width="8" height="5" x="13" y="16" rx=".899" />
                            </svg>
                            Account</a>
                    </li>

                    <!-- Auth -->
                    <span>Auth</span>
                    <li>
                        <a href="/login"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-scan-face-icon lucide-scan-face">
                                <path d="M3 7V5a2 2 0 0 1 2-2h2" />
                                <path d="M17 3h2a2 2 0 0 1 2 2v2" />
                                <path d="M21 17v2a2 2 0 0 1-2 2h-2" />
                                <path d="M7 21H5a2 2 0 0 1-2-2v-2" />
                                <path d="M8 14s1.5 2 4 2 4-2 4-2" />
                                <path d="M9 9h.01" />
                                <path d="M15 9h.01" />
                            </svg>
                            Login</a>
                    </li>
                    <li>
                        <a href="/signup"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-key-icon lucide-key">
                                <path d="m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4" />
                                <path d="m21 2-9.6 9.6" />
                                <circle cx="7.5" cy="15.5" r="5.5" />
                            </svg>
                            Sign Up</a>
                    </li>
                </ul>
            </aside>
            <main>

            </main>
        </div>
    </div>

    <div id="context_menu" style="
        position: absolute;
        top: 0;
        left: 0;
        display: none;
        z-index: 1000000;
        width: 200px;
      ">
        <ul id="context_menu_list"></ul>
    </div>

    <div id="movefolderdiv">
        <label for="moveFolder">
            Where you want to move your Folder
            <select name="" id="moveFolder"></select>
        </label>
        <button onclick="move()">Move</button>
    </div>

    <div class="move_folder">
        <div class="header_title" style="font-weight: bolder;">
            <div class="span">Move " folderName"</div>
        </div>
        <hr />
        <div class="folders_name">
            <ul>
                <% folders.forEach((folder, i)=> { %>
                    <li>
                        <label>
                            <input type="radio" name="moveFolder" value="<%= folder._id %>" id="moveFolder<%= i %>" />
                            <div class="folder">
                                <div class="folder_icon">
                                    <!-- SVG folder icon -->
                                </div>
                                <div class="folder_name"
                                    style="display: flex; justify-content: center; align-items: center; gap: 10px; ">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                        fill="#EDCE44" stroke="none" stroke-width="2" stroke-linecap="round"
                                        stroke-linejoin="round" class="lucide lucide-folder-icon lucide-folder">
                                        <path
                                            d="m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2" />
                                    </svg>
                                    <span 
                                    style="display: block;   
                                             width: 120px;            
                                             white-space: nowrap;     
                                             overflow: hidden;        
                                             text-overflow: ellipsis;" 
                                             title="<%= folder.folderName %>">
                                        <%= folder.folderName %>
                                    </span>
                                </div>
                            </div>
                        </label>
                    </li>
                    <% }) %>
            </ul>
            <button class="move_btn" onclick="moveIt()">Move</button>
        </div>
    </div>
    <div class="toast" data-type="success">
        <div class="toast-content">
            <span class="toast-message"></span>
            <div class="close">
                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none"
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-octagon-x-icon lucide-octagon-x">
                    <path d="m15 9-6 6" />
                    <path
                        d="M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z" />
                    <path d="m9 9 6 6" />
                </svg>
            </div>
        </div>
    </div>



    <script src="/scripts/home.js"></script>
    <script>
        let results = document.getElementById("results");
        let list = document.getElementById("results-list");
        let searchInput = document.querySelector(".searchResult");

        let debounceTimer;

        searchInput.addEventListener("input", function (e) {
            e.stopPropagation();
            let query = e.target.value.trim();

            clearTimeout(debounceTimer);

            if (!query) {
                results.classList.remove("active");
                return;
            }

            debounceTimer = setTimeout(async () => {
                results.classList.add("active");

                try {
                    let rs = await fetch(`/search?query=${encodeURIComponent(query)}`);
                    let data = await rs.json();
                    data.findCards.forEach((item) => {
                        let a = document.createElement("a");
                        a.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search-icon lucide-search"><path d="m21 21-4.34-4.34"/><circle cx="11" cy="11" r="8"/></svg> ${item.title}`;
                        a.href = `/card/${item._id}`;
                        a.target = "_blank";
                        list.innerHTML = "";
                        list.appendChild(a);
                    });

                    if (list.children.length === 0) {
                        let li = document.createElement("li");
                        li.textContent = "No results found";
                        list.appendChild(li);
                    }
                } catch (err) {
                    console.error("Search error:", err);
                }
            }, 300);
        });




        function setActiveStyle(element, active) {
            if (active) {
                element.style.fill = "black";
                element.style.transition = "0.3s ease";
            } else {
                element.style.fill = "none";
            }
        }

        async function pinIt(id) {
            const pinIcon = document.querySelector(`.pin[data-id="${id}"] svg`);
            try {
                const res = await fetch(`/card/pin/${id}`, {
                    method: "PUT",
                });
                const data = await res.json();

                if (data.success) {
                    setActiveStyle(pinIcon, data.card.isPinned);
                }
            } catch (err) {
                console.error("Error pinning:", err);
            }
        }

        async function favIt(id) {
            const favIcon = document.querySelector(`.fav[data-id="${id}"] svg`);
            try {
                const res = await fetch(`/card/fav/${id}`, {
                    method: "PUT",
                });
                const data = await res.json();

                if (data.success) {
                    setActiveStyle(favIcon, data.card.isFavorite);
                }
            } catch (err) {
                console.error("Error favoriting:", err);
            }
        }

        // document.querySelectorAll(".menu_top").forEach((el) => {
        //   el.addEventListener("click", (e) => {
        //     e.stopPropagation();
        //     toggleMenu(e, el.dataset.id);
        //   });
        // });

        // function toggleMenu(e, id) {
        //   e.stopPropagation();
            //     
        //   document.querySelectorAll(".menu-popup").forEach((m) => {
        //     if (m.id !== "menu-" + id) m.classList.remove("active");
        //   });

        //   let menu = document.getElementById("menu-" + id);
        //   menu.classList.toggle("active");
        // }

        async function deleteCard(id) {
            try {
                const res = await fetch(`/card/${id}`, {
                    method: "DELETE",
                    credentials: "include",
                });

                if (res.ok) {
                    const cardEl = document.getElementById(`card-${id}`);
                    if (cardEl) {
                        cardEl.remove();
                    }
                    window.location.reload();
                } else {
                    console.error("Failed to delete card:", await res.text());
                }
            } catch (err) {
                console.error("Delete error:", err);
            }
        }

        function editCard(id) {
            window.location.assign(`/card/${id}`);
        }

        let search = document.getElementById("search");
        search.addEventListener("keydown", function (e) {
            if (e.key === "Enter") {
                let query = search.value;
                if (query.trim() !== "") {
                    window.location.href = `/search?query=${encodeURIComponent(query)}`;
                }
            }
        });
        document.addEventListener("keydown", function (e) {
            if (e.ctrlKey && e.key === "k") {
                e.preventDefault();
                search.focus();
            }
        });
    </script>
    <script>
        window.onload = () => {
            let loader = document.querySelector(".loader");
            loader.style.display = "none";
        };
    </script>
    <script>
        let context_menu = document.getElementById("context_menu");
        let menuListEl = document.getElementById("context_menu_list");

        document.querySelectorAll(".menu_top").forEach((card) => {
            card.addEventListener("click", (e) => {
                e.stopPropagation();
                const icons = {
                    delete: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-icon lucide-trash"><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"/><path d="M3 6h18"/><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/></svg>`,
                    edit: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder-pen-icon lucide-folder-pen"><path d="M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5"/><path d="M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"/></svg>`,
                    move: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-move-icon lucide-move"><path d="M12 2v20"/><path d="m15 19-3 3-3-3"/><path d="m19 9 3 3-3 3"/><path d="M2 12h20"/><path d="m5 9-3 3 3 3"/><path d="m9 5 3-3 3 3"/></svg>`,
                    share: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-external-link-icon lucide-external-link"><path d="M15 3h6v6"/><path d="M10 14 21 3"/><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/></svg>`,
                    pin: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pin-icon lucide-pin"><path d="M12 17v5"/><path d="M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z"/></svg>`,
                };

                let { id, menuId, menus, userid, cardname, mtype } = e.currentTarget.dataset;
                console.log(mtype)
                const actions = {
                    edit: () => editCard(id),
                    share: () => shareCard(userid, id),
                    pin: () => pinIt(id),
                    move: () => moveCard(id, cardname, mtype),
                    fav: () => favIt(id),
                    delete: () => deleteCard(id),
                };
                let menuItems = menus.split(",").map((i) => i.trim());
                context_menu.style.display = "block";
                context_menu.style.visibility = "hidden";
                context_menu.style.left = "0px";
                context_menu.style.top = "0px";

                let menuWidth = context_menu.offsetWidth;
                let menuHeight = context_menu.offsetHeight;

                let x = e.clientX;
                let y = e.clientY;

                if (x + menuWidth > window.innerWidth)
                    x = window.innerWidth - menuWidth - 10;
                if (y + menuHeight > window.innerHeight)
                    y = window.innerHeight - menuHeight - 10;

                context_menu.style.left = x + "px";
                context_menu.style.top = y + "px";
                context_menu.style.visibility = "visible";
                context_menu.style.display = "block";

                menuListEl.innerHTML = "";

                menuItems.forEach((item) => {
                    let li = document.createElement("li");
                    li.innerHTML = `${icons[item]} ${item}`;
                    menuListEl.appendChild(li);
                    if (actions[item]) {
                        li.addEventListener("click", (ev) => {
                            ev.stopPropagation();
                            actions[item]();
                            context_menu.style.display = "none";
                        });
                    }
                });
            });
        });

        let move_folder = document.querySelector(".move_folder");
        let getFoldername = document.querySelector(".header_title .span");
        let folderId;
        let cardId;
        let movetype;
        let folder = document.querySelectorAll("input[name='moveFolder']").forEach((fl) => {
            fl.addEventListener("change", (e) => {
                folderId = e.target.value;
            })
        })




        async function moveCard(id, cardName, mtype) {
            cardId = id;
            movetype = mtype;
            getFoldername.textContent = `Move \"${cardName}\" :`;
            move_folder.style.display = "block";
            move_folder.style.visibility = "visible";
        }

        const toast = document.querySelector(".toast");
        const toastCloseBtn = document.querySelector(".toast .close");
        const toastMessage = document.querySelector(".toast-message");

        let toastTimeoutId = null;

        function showToast(message, type = "success", duration = 5000) {
            if (toastTimeoutId) clearTimeout(toastTimeoutId);
            toastMessage.textContent = message;
            toast.dataset.type = type;
            toast.style.display = "block";
            toastTimeoutId = setTimeout(() => {
                toast.style.display = "none";
                toastTimeoutId = null;
            }, duration);
        }
        toastCloseBtn.addEventListener("click", () => {
            toast.style.display = "none";
            if (toastTimeoutId) {
                clearTimeout(toastTimeoutId);
                toastTimeoutId = null;
            }
        });

        async function moveIt() {
            const selected = document.querySelector("input[name='moveFolder']:checked");
            if (!selected) {
                showToast("⚠️ Please select a folder before moving.", "error");
                return;
            }

            const folderId = selected.value;

            try {
                const res = await fetch(`moveit/${movetype}/${folderId}/${cardId}`, {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    credentials: "include",
                });

                if (!res.ok) {
                    let errorMsg = "Move failed. Please try again.";
                    try {
                        const data = await res.json();
                        if (data?.error) errorMsg = data.error;
                    } catch {
                    }
                    showToast(`🚨 ${errorMsg}`, "error");
                } else {
                    showToast(`🎉 Successfully moved ${movetype}!`, "success");
                }
            } catch (err) {
                console.error("Error in moveIt:", err);
                showToast("🚨 Unexpected error. Please check your connection.", "error");
            }
        }



        document.addEventListener("click", () => {
            move_folder.style.display = "none";
            context_menu.style.display = "none";
            move_folder.querySelectorAll("input").forEach((inp) => {
                if (inp.type === "radio" || inp.type === "checkbox") {
                    inp.checked = false;
                    folderId = null;
                } else {
                    inp.value = "";
                }
            });
        });
        move_folder.addEventListener("click", (e) => {
            e.stopPropagation();
        });
    </script>
    <script>
        const mf = document.querySelector(".move_folder");
        let isDragging = false;
        let offsetX, offsetY;
        mf.addEventListener("mousedown", (e) => {
            e.preventDefault();
            isDragging = true;
            offsetX = e.clientX - mf.offsetLeft;
            offsetY = e.clientY - mf.offsetTop;
            mf.style.position = "absolute";
            mf.style.zIndex = 1000;
        });
        document.addEventListener("mousemove", (e) => {
            if (!isDragging) return;
            mf.style.left = e.clientX - offsetX + "px";
            mf.style.top = e.clientY - offsetY + "px";
        });
        document.addEventListener("mouseup", () => {
            isDragging = false;
        });


    </script>
    <script>
        // if ("serviceWorker" in navigator) {
        //     navigator.serviceWorker
        //       .register("/service-worker.js")
        //       .then((e) => console.log(`Service Worker registered ${e.installing}`))
        //       .catch((err) => console.error("SW registration failed:", err));
        //   }
    </script>
    <script src="\scripts\shortcut.js"></script>
    <script src="\scripts\index.js"></script>
    <script src="\scripts\context_menu.js"></script>
</body>

</html>